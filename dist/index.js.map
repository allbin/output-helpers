{"version":3,"sources":["index.ts"],"names":["moment","defineLocale","getDateLocale","locale","translations","default_config","date_locale","dictionaries","extend_with","fallback_language","lang","config","Object","assign","supported_languages","translate","str","capitalize","language","empty_on_error","dictionary","console","error","length","translation","doTranslationCheck","capitalizeString","key","hasOwnProperty","warn","dict","undefined","force_lower","charAt","toUpperCase","substring","toLowerCase","slice","formatDateAsString","d","output_format","input_format","utc","isMoment","format","getMonth","formatDateAsTimeString","dateToMoment","date_locales","months","monthsShort","weekdays","weekdaysShort","weekdaysMin","week","dow","doy","Error","formatSecondsToMS","value","alwaysInclude","padding","colon","minutes","Math","floor","ceil","seconds","m_str","s_str","roundTo","input","round_exp","round","stringified","toString","split","roundUpTo","ceil_exp","roundDownTo","floor_exp","options","str_arr","separate_padding","integer_padding","decimal_padding","i_pad_length","d_pad_length","pad_length","trunc","grouping","is_negative","substr","separated","joined_arr","join","updateTranslations","dictionary_arr","overwrite","forEach","dict_index","prefix","keys","potential_lang","includes","lang_in_dict","keys_for_lang","new_lang_translations","updated_lang_translations","translation_key","addDictionary","push","funcs","getCurrentConfig","getFallbackLang","getLang","setConfig","exported_funcs","config_opts","invalid","Array","isArray"],"mappings":"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","file":"index.js","sourcesContent":["import moment from 'moment';\n\n\nexport type LangId = \"sv-SE\"|\"en-US\";\nexport interface Dictionary {\n    [key: string]: any;\n    \"sv-SE\"?: StrStrObject;\n    \"en-US\"?: StrStrObject;\n    prefix?: string;\n}\nexport interface FormatOptions {\n    round?: number;\n    ceil?: number;\n    floor?: number;\n    integer_padding?: number;\n    decimal_padding?: number;\n    padding?: number;\n    trunc?: boolean;\n    grouping?: boolean;\n}\nexport interface OHConfig extends Partial<Config> {}\ninterface Config {\n    [key: string]: any;\n    date_locale: LangId|null;\n    dictionaries: Dictionary[];\n    extend_with: {\n        [key: string]: any\n    }|null;\n    fallback_language: LangId;\n    lang: LangId;\n}\ninterface StrStrObject {\n    [key: string]: string;\n}\n\n\n\nmoment.defineLocale('sv-SE', getDateLocale('sv-SE'));\nmoment.defineLocale('en-US', getDateLocale('en-US'));\nmoment.locale('en-US');\n\n\n\nlet translations: Dictionary = {};\n\nlet default_config: Config = {\n    date_locale: null,\n    dictionaries: [],\n    extend_with: null,\n    fallback_language: 'en-US',\n    lang: 'en-US'\n};\nlet config = Object.assign({}, default_config);\nlet supported_languages = ['sv-SE', 'en-US'];\n\n//////////////////\n//STRINGS\n\nfunction translate(str: string, capitalize: boolean = true, language: LangId|null = null, empty_on_error: boolean = false, dictionary: Dictionary|null = null) {\n    // const lang_in_jwt = (window.sso && window.sso.isLoggedIn()) ? window.sso.getJWT().getClaim(\"lang\") : config.fallback_language;\n    let lang = language || config.lang;\n    dictionary = dictionary || translations;\n\n    if (!dictionary) {\n        console.error(\"Dictionary not defined.\");\n        return str;\n    }\n\n    if (!str || str.length === 0) {\n        console.error(\"Tried to translate undefined string.\");\n        return \"\";\n    }\n\n    let translation = doTranslationCheck(str, dictionary, lang, empty_on_error);\n\n    if (capitalize === true) {\n        return capitalizeString(translation);\n    }\n    return translation;\n}\n\nfunction doTranslationCheck(key: string, dictionary: Dictionary, lang: string, empty_on_error: boolean = false) {\n    if (dictionary.hasOwnProperty(lang) === false) {\n        console.warn(\"Translation for language '\" + lang +\"' not supported, defaulting to: \" + config.fallback_language);\n        if (dictionary.hasOwnProperty(config.fallback_language) === false) {\n            console.error(\"Fallback language '\" + config.fallback_language + \"' not defined in translation library!\");\n            if (empty_on_error) {\n                return \"\";\n            }\n            return key + \"\";\n        }\n        lang = config.fallback_language;\n    }\n\n    let translation = dictionary[lang][key];\n    if (!translation) {\n        if (lang === config.fallback_language) {\n            console.error(\"No translation found for '\" + key + \"' for '\" + lang + \"' or fallback language.\");\n            if (empty_on_error) {\n                return \"\";\n            }\n            return key + \"\";\n        }\n        const dict = dictionary[config.fallback_language];\n        if (dict) {\n            translation = dict[key];\n        } else {\n            translation = undefined;\n        }\n        \n        if (!translation) {\n            console.error(\"No translation found for '\" + key + \"' for '\" + lang + \"' or fallback language.\");\n            if (empty_on_error) {\n                return \"\";\n            }\n            return key + \"\";\n        }\n\n        console.warn(\"No translation found for '\" + key + \"' for '\" + lang + \"'. Returning fallback language.\");\n    }\n\n    return translation;\n}\n\nfunction capitalizeString(str: string, force_lower:boolean = false) {\n    if (typeof str !== \"string\") { console.warn(\"Capitalize err: input not a string.\"); return \"\"; }\n    if (str.length < 1) { return \"\"; }\n\n    if (force_lower) {\n        return str.charAt(0).toUpperCase() + str.substring(1).toLowerCase();\n    }\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\n\n\n\n///////////////\n//DATE and TIME\n\nfunction formatDateAsString(d: Date|string|moment.Moment|number, output_format = \"YYYY-MM-DD HH:mm\", input_format: string|null = null, utc = false) {\n    if (moment.isMoment(d)) {\n        return d.format(output_format);\n    }\n\n    if (typeof d === \"string\") {\n        if (input_format) {\n            d = (utc) ? moment.utc(d, input_format) : moment(d, input_format);\n        } else {\n            d = (utc) ? moment.utc(d) : moment(d);\n        }\n    } else if (typeof d === \"number\") {\n        d = (utc) ? moment.utc(d) : moment(d);\n    } else if (typeof d.getMonth === 'function') {\n        d = (utc) ? moment.utc(d) : moment(d);\n    } else {\n        console.error(\"Cannot formatDateAsString; unknown format of input. moments, strings and dates are supported. Returning input.\");\n        return d + \"\"; //Force string.\n    }\n    return d.format(output_format);\n}\n\nfunction formatDateAsTimeString(d: Date|string|moment.Moment|number, input_format = null, utc = false) {\n    return formatDateAsString(d, \"HH:mm\", input_format, utc);\n}\n\nfunction dateToMoment(d: Date, utc = false) {\n    if (utc) {\n        return moment.utc(d);\n    }\n    return moment(d);\n}\n\nfunction getDateLocale(language: LangId|null = null) {\n    // const lang_in_jwt = (window.sso && window.sso.isLoggedIn()) ? window.sso.getJWT().getClaim(\"lang\") : fallback_language;\n    let lang = language || config.lang;\n\n    const date_locales: {\n        [key: string]: moment.LocaleSpecification\n    } = {\n        \"sv-SE\": {\n            months: [\n                \"Januari\", \"Februari\", \"Mars\", \"April\", \"Maj\", \"Juni\", \"Juli\",\n                \"Augusti\", \"September\", \"Oktober\", \"November\", \"December\"\n            ],\n            monthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Maj\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dec\"],\n            weekdays: [\"Söndag\", \"Måndag\", \"Tisdag\", \"Onsdag\", \"Torsdag\", \"Fredag\", \"Lördag\"],\n            weekdaysShort: [\"Sön\", \"Mån\", \"Tis\", \"Ons\", \"Tor\", \"Fre\", \"Lör\"],\n            weekdaysMin: [\"Sö\", \"Må\", \"Ti\", \"On\", \"To\", \"Fr\", \"Lö\"],\n            week: {\n                dow: 1,\n                doy: 4\n            }\n        },\n        \"en-US\": {\n            months: [\n                \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n                \"August\", \"September\", \"October\", \"November\", \"December\"\n            ],\n            monthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n            weekdays: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n            weekdaysShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n            weekdaysMin: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n            week: {\n                dow: 1,\n                doy: 4\n            }\n        }\n    };\n\n    if (date_locales.hasOwnProperty(lang)) {\n        return date_locales[lang];\n    } else if (date_locales.hasOwnProperty(config.fallback_language)) {\n        console.error(\"Missing date locales for lang '\" + lang + \"', returning fallback language '\" + config.fallback_language + \"'.\");\n        return date_locales[config.fallback_language];\n    }\n    throw new Error(\"Missing date locales for lang '\" + lang + \"' and fallback language '\" + config.fallback_language + \"'. Returning null.\");\n}\n\nfunction formatSecondsToMS(value: number, alwaysInclude = \"none\", padding = false, colon = false) {\n    //Function to convert a value (seconds) to a [m]m[s]s format: 1m2s.\n    //alwaysInclude can be:\n    // \"none\" - if not enough for a minute only returns seconds, if an exact minute the seconds will not be included.\n    // \"minutes\" - if value not above 60 \"0m\" will be prepended to the seconds.\n    // \"seconds\" - if value is exact minute \"0s\" will be appended after the minute.\n    // \"both\" - Will always prepend and append \"0m\" and \"0s\" respectively as needed.\n    //padding <bool> toggles if values should be padded so 4 becomes 04. Both minutes and seconds will be padded.\n    //colon <bool> changes the format to be mm:ss instead of \"mmMssS\". Will always include both minutes and seconds, always padding.\n\n    const minutes = (value > 0) ? Math.floor(value / 60) : Math.ceil(value / 60);\n    const seconds = value % 60;\n\n    let m_str = \"\";\n    let s_str = \"\";\n\n    if (padding || colon) {\n        m_str = format(minutes, { padding: 2 });\n        s_str = format(seconds, { padding: 2 });\n    } else {\n        m_str = minutes + \"\"; //Ensure string.\n        s_str = seconds + \"\"; //Ensure string.\n    }\n\n    if (colon) {\n        return m_str + \":\" + s_str;\n    }\n\n    if (alwaysInclude === \"none\") {\n        if (minutes !== 0 && seconds !== 0) {\n            return m_str + \"m\" + s_str + \"s\";\n        } else if (minutes === 0) {\n            return s_str + \"s\";\n        }\n        return m_str + \"m\";\n    } else if (alwaysInclude === \"minutes\") {\n        if (seconds !== 0) {\n            return m_str + \"m\" + s_str + \"s\";\n        }\n        return m_str + \"m\";\n    } else if (alwaysInclude === \"seconds\") {\n        if (minutes !== 0) {\n            return m_str + \"m\" + s_str + \"s\";\n        }\n        return s_str + \"s\";\n    }\n    return m_str + \"m\" + s_str + \"s\";\n}\n\n\n\n\n\n\n////////////////\n//Numeric\n\nfunction roundTo(input: number, round_exp: number = 0) {\n    if (round_exp === 0) { return Math.round(input); }\n    let stringified: string[] = [\"\"];\n    stringified = input.toString().split('e');\n    let round = Math.round(+(stringified[0] + 'e' + (stringified[1] ? (+stringified[1] - round_exp) : -round_exp)));\n    stringified = round.toString().split('e');\n    return +(stringified[0] + 'e' + (stringified[1] ? (+stringified[1] + round_exp) : round_exp));\n}\n\nfunction roundUpTo(input: number, ceil_exp: number = 0) {\n    if (ceil_exp === 0) { return Math.ceil(input); }\n    let stringified: string[] = [\"\"];\n    stringified = input.toString().split('e');\n    let ceil = Math.ceil(+(stringified[0] + 'e' + (stringified[1] ? (+stringified[1] - ceil_exp) : -ceil_exp)));\n    stringified = ceil.toString().split('e');\n    return +(stringified[0] + 'e' + (stringified[1] ? (+stringified[1] + ceil_exp) : ceil_exp));\n}\n\nfunction roundDownTo(input: number, floor_exp: number = 0) {\n    if (floor_exp === 0) { return Math.floor(input); }\n    let stringified: string[] = [\"\"];\n    stringified = input.toString().split('e');\n    let floor = Math.floor(+(stringified[0] + 'e' + (stringified[1] ? (+stringified[1] - floor_exp) : -floor_exp)));\n    stringified = floor.toString().split('e');\n    return +(stringified[0] + 'e' + (stringified[1] ? (+stringified[1] + floor_exp) : floor_exp));\n}\n\n\nfunction format(value: number, options: FormatOptions) {\n    let str: string;\n    let str_arr: string[];\n    const round = (typeof options.round === \"number\") || false;\n    const round_exp = options.round;\n    const ceil = (typeof options.ceil === \"number\") || false;\n    const ceil_exp = options.ceil;\n    const floor = (typeof options.floor === \"number\") || false;\n    const floor_exp = options.floor;\n    const separate_padding = (typeof options.integer_padding === \"number\" || typeof options.decimal_padding === \"number\") || false;\n    const i_pad_length = options.integer_padding;\n    const d_pad_length = options.decimal_padding;\n    const padding = (typeof options.padding === \"number\") || false;\n    const pad_length = options.padding;\n    const trunc = (options.trunc === true) || false;\n    const grouping = (options.grouping === true) || false;\n\n    const is_negative = (value < 0);\n\n    if (typeof value !== \"number\") {\n        console.warn(\"Tried to format a value but input was typeof: \", typeof value);\n        return value;\n    }\n\n    if (round && !ceil && !floor) {\n        value = roundTo(value, round_exp);\n    }\n    if (ceil && !floor) {\n        value = roundUpTo(value, ceil_exp);\n    }\n    if (floor) {\n        value = roundDownTo(value, floor_exp);\n    }\n\n    if (trunc && !round) {\n        str = Math.trunc(value).toString();\n    } else {\n        str = value.toString();\n    }\n\n    if (grouping) {\n        if (is_negative) { //Remove minus sign if negative.\n            str = str.substr(1);\n        }\n        let separated = str.split('.'); //We only want to group the value before the decimal point.\n        str_arr = separated[0].split('');\n        str = \"\";\n        while (str_arr.length > 3) {\n            str = \" \" + str_arr[str_arr.length - 3] + str_arr[str_arr.length - 2] + str_arr[str_arr.length - 1] + str;\n            str_arr = str_arr.slice(0, str_arr.length - 3);\n        }\n        let joined_arr = str_arr.join(\"\");\n        str = (joined_arr.length > 0) ? joined_arr + str : str;\n        str += (separated.length > 1) ? \".\" + separated[1] : \"\";\n        if (is_negative) { //Add minus sign if negative.\n            str = \"-\" + str;\n        }\n    }\n\n    if (separate_padding) {\n        str_arr = str.split(\".\");\n        if (i_pad_length && str_arr[0].length < i_pad_length) {\n            str_arr[0] = (\"000000000000000000000\" + str_arr[0]).slice(-i_pad_length);\n        }\n        if (d_pad_length) {\n            if (str_arr.length > 1 && str_arr[1].length < d_pad_length) {\n                str_arr[1] = (str_arr[1] + \"000000000000000000000\").slice(0, d_pad_length);\n                str = str_arr.join(\".\");\n            } else if (str_arr.length > 1) {\n                str = str_arr[0] + \".\" + (str_arr[1] + \"00000000000000000\").slice(0, d_pad_length);\n            } else {\n                str = str_arr[0] + \".\" + \"00000000000000000\".slice(0, d_pad_length);\n            }\n        }\n    }\n    if (padding && pad_length) {\n        if (str.length < pad_length) {\n            str = (str + \"000000000000000000000\").slice(0, pad_length);\n        }\n    }\n\n    return str;\n}\n\n\n\n\n\n\nfunction updateTranslations(dictionary_arr: Dictionary[], warn = true, overwrite = true) {\n    translations = {};\n    dictionary_arr.forEach((dict: Dictionary, dict_index: number) => {\n        let prefix = dict.hasOwnProperty('prefix') ? dict.prefix : \"\";\n        let keys = Object.keys(dict);\n        keys.forEach((potential_lang) => {\n            if (supported_languages.includes(potential_lang) === false) {\n                return;\n            }\n            let lang = potential_lang as LangId;\n            const lang_in_dict = dict[lang];\n            if (!lang_in_dict) { return; }\n            let keys_for_lang: string[] = Object.keys(lang_in_dict);\n            if (translations.hasOwnProperty(lang) === false) {\n                let new_lang_translations: StrStrObject = {};\n                keys_for_lang.forEach((key) => {\n                    new_lang_translations[prefix + key] = lang_in_dict[key];\n                });\n                translations[lang] = new_lang_translations;\n            } else {\n                if (warn || !overwrite) {\n                    let updated_lang_translations = Object.assign({}, translations[lang]);\n                    \n                    keys_for_lang.forEach((translation_key) => { \n                        if (updated_lang_translations.hasOwnProperty(prefix + translation_key)) {\n                            if (warn) {\n                                console.warn(\"OH: Dictionary \" + dict_index + \" is conflicting with existing key '\" + (prefix + translation_key) + \"'.\");\n                            }\n                            if (overwrite) {\n                                updated_lang_translations[prefix + translation_key] = lang_in_dict[translation_key];\n                            }\n                        }\n                        updated_lang_translations[prefix + translation_key] = lang_in_dict[translation_key];\n                    });\n                    translations[lang] = updated_lang_translations;\n                } else {\n                    let new_lang_translations: StrStrObject = {};\n                    keys_for_lang.forEach((key) => {\n                        new_lang_translations[prefix + key] = lang_in_dict[key];\n                    });\n                    translations[lang] = Object.assign({}, translations[lang], new_lang_translations);\n                }\n            }\n        });\n    });\n}\n\nfunction addDictionary(dictionary: Dictionary) {\n    config.dictionaries.push(dictionary);\n    updateTranslations(config.dictionaries);\n}\n\nlet funcs = {\n    addDictionary: addDictionary,\n    dateToMoment: dateToMoment,\n    format: format,\n    formatDateAsString: formatDateAsString,\n    formatDateAsTimeString: formatDateAsTimeString,\n    formatSecondsToMS: formatSecondsToMS,\n    getCurrentConfig: getCurrentConfig,\n    getDateLocale: getDateLocale,\n    getFallbackLang: getFallbackLang,\n    getLang: getLang,\n    roundDownTo: roundDownTo,\n    roundTo: roundTo,\n    roundUpTo: roundUpTo,\n    setConfig: setConfig,\n    translate: translate,\n};\n\nlet exported_funcs = Object.assign({}, funcs);\n\nfunction setConfig(config_opts: OHConfig) {\n    let invalid = false;\n    Object.keys(config_opts).forEach((key) => {\n        if (key === \"dictionaries\" && config.dictionaries.length > 0) {\n            console.warn(\"OH: To add dictionaries after initial setConfig use 'OH.addDictionary()'\");\n            invalid = true;\n            return;\n        }\n        if (config[key] !== default_config[key]) {\n            console.warn(\"OH: setConfig has overwritten previous setting '\" + key + \"': \" + config[key] + \" => \" + config_opts[key]);\n        }\n    });\n    if (invalid) {\n        console.error(\"OH: Unable to setConfig, invalid settings.\");\n        return;\n    }\n    config = Object.assign({}, config, config_opts);\n\n    if (!config.lang) {\n        console.warn(\"OH: No lang specified with setConfig, defaulting to fallback language: \" + config.fallback_language + \".\");\n        config.lang = config.fallback_language;\n    }\n    if (config.date_locale) {\n        moment.locale(config.date_locale);\n    } else {\n        moment.locale(config.lang);\n    }\n    if (Array.isArray(config.dictionaries) === false) {\n        console.error(\"OH: 'dictionaries' prop required to be an array.\");\n        config.dictionaries = [];\n        translations = {};\n    }\n\n    updateTranslations(config.dictionaries);\n    exported_funcs = Object.assign(exported_funcs, config.extend_with, funcs);\n}\n\nfunction getCurrentConfig() {\n    return Object.assign({}, config);\n}\n\nfunction getLang() {\n    return config.lang;\n}\nfunction getFallbackLang() {\n    return config.fallback_language;\n}\n\n\n\nexport default exported_funcs;\n"]}