{"version":3,"sources":["index.js"],"names":["moment","defineLocale","getDateLocale","locale","translations","default_config","fallback_language","date_locale","lang","dictionaries","extend_with","config","Object","assign","translate","str","capitalize","language","empty_on_error","dictionary","console","error","length","translation","doTranslationCheck","capitalizeString","key","hasOwnProperty","warn","force_lower","charAt","toUpperCase","substring","toLowerCase","slice","formatDateAsString","d","output_format","input_format","isMoment","format","getMonth","formatDateAsTimeString","dateToMoment","date_locales","months","monthsShort","weekdays","weekdaysShort","weekdaysMin","week","dow","doy","formatSecondsToMS","value","alwaysInclude","padding","colon","minutes","Math","floor","ceil","seconds","m_str","s_str","roundTo","round_exp","round","toString","split","roundUpTo","ceil_exp","roundDownTo","floor_exp","options","fixed","separate_padding","integer_padding","decimal_padding","i_pad_length","d_pad_length","pad_length","trunc","grouping","is_negative","substr","separated","arr","join","updateTranslations","dictionary_arr","overwrite","forEach","dict","dict_index","prefix","langs","keys","new_lang_translations","updated_lang_translations","translation_key","addDictionary","push","funcs","getCurrentConfig","getFallbackLang","getLang","setConfig","exported_funcs","config_opts","Array","isArray"],"mappings":"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","file":"index.js","sourcesContent":["import moment from 'moment';\n\n\nmoment.defineLocale('sv-SE', getDateLocale('sv-SE'));\nmoment.defineLocale('en-US', getDateLocale('en-US'));\nmoment.locale('en-US');\n\nlet translations = {};\nlet default_config = {\n    fallback_language: 'en-US',\n    date_locale: null,\n    lang: 'en-US',\n    dictionaries: [],\n    extend_with: null\n};\nlet config = Object.assign({}, default_config);\n\n\n\n\n//////////////////\n//STRINGS\n\nfunction translate(str, capitalize = true, language = null, empty_on_error = false, dictionary = null) {\n    // const lang_in_jwt = (window.sso && window.sso.isLoggedIn()) ? window.sso.getJWT().getClaim(\"lang\") : config.fallback_language;\n    let lang = language || config.lang;\n    dictionary = dictionary || translations;\n\n    if (!dictionary) {\n        console.error(\"Dictionary not defined.\");\n        return str;\n    }\n\n    if (!str || str.length === 0) {\n        console.error(\"Tried to translate undefined string.\");\n        return \"\";\n    }\n\n    let translation = doTranslationCheck(str, dictionary, lang, empty_on_error);\n\n    if (capitalize === true) {\n        return capitalizeString(translation);\n    }\n    return translation;\n}\n\nfunction doTranslationCheck(key, dictionary, lang, empty_on_error = false) {\n    if (dictionary.hasOwnProperty(lang) === false) {\n        console.warn(\"Translation for language '\" + lang +\"' not supported, defaulting to: \" + config.fallback_language);\n        if (dictionary.hasOwnProperty(config.fallback_language) === false) {\n            console.error(\"Fallback language '\" + config.fallback_language + \"' not defined in translation library!\");\n            if (empty_on_error) {\n                return \"\";\n            }\n            return key + \"\";\n        }\n        lang = config.fallback_language;\n    }\n\n    let translation = dictionary[lang][key];\n    if (!translation) {\n        if (lang === config.fallback_language) {\n            console.error(\"No translation found for '\" + key + \"' for '\" + lang + \"' or fallback language.\");\n            if (empty_on_error) {\n                return \"\";\n            }\n            return key + \"\";\n        }\n\n        translation = dictionary[config.fallback_language][key];\n        if (!translation) {\n            console.error(\"No translation found for '\" + key + \"' for '\" + lang + \"' or fallback language.\");\n            if (empty_on_error) {\n                return \"\";\n            }\n            return key + \"\";\n        }\n\n        console.warn(\"No translation found for '\" + key + \"' for '\" + lang + \"'. Returning fallback language.\");\n    }\n\n    return translation;\n}\n\nfunction capitalizeString(str, force_lower = false) {\n    if (typeof str !== \"string\") { console.warn(\"Capitalize err: input not a string.\"); return \"\"; }\n    if (str.length < 1) { return \"\"; }\n\n    if (force_lower) {\n        return str.charAt(0).toUpperCase() + str.substring(1).toLowerCase();\n    }\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\n\n\n\n///////////////\n//DATE and TIME\n\nfunction formatDateAsString(d, output_format = \"YYYY-MM-DD HH:mm\", input_format = null) {\n    if (moment.isMoment(d)) {\n        return d.format(output_format);\n    }\n\n    if (typeof d === \"string\") {\n        if (input_format) {\n            d = moment(d, input_format);\n        } else {\n            d = moment(d);\n        }\n    } else if (typeof d.getMonth === 'function') {\n        d = moment(d);\n    } else {\n        console.error(\"Cannot formatDateAsString; unknown format of input. moments, strings and dates are supported. Returning input.\");\n        return d + \"\"; //Force string.\n    }\n    return d.format(output_format);\n}\n\nfunction formatDateAsTimeString(d, input_format = null) {\n    return formatDateAsString(d, \"HH:mm\", input_format);\n}\n\nfunction dateToMoment(d) {\n    return moment(d);\n}\n\nfunction getDateLocale(language = null) {\n    // const lang_in_jwt = (window.sso && window.sso.isLoggedIn()) ? window.sso.getJWT().getClaim(\"lang\") : fallback_language;\n    let lang = language || config.lang;\n\n    const date_locales = {\n        \"sv-SE\": {\n            months: [\n                \"Januari\", \"Februari\", \"Mars\", \"April\", \"Maj\", \"Juni\", \"Juli\",\n                \"Augusti\", \"September\", \"Oktober\", \"November\", \"December\"\n            ],\n            monthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Maj\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dec\"],\n            weekdays: [\"Söndag\", \"Måndag\", \"Tisdag\", \"Onsdag\", \"Torsdag\", \"Fredag\", \"Lördag\"],\n            weekdaysShort: [\"Sön\", \"Mån\", \"Tis\", \"Ons\", \"Tor\", \"Fre\", \"Lör\"],\n            weekdaysMin: [\"Sö\", \"Må\", \"Ti\", \"On\", \"To\", \"Fr\", \"Lö\"],\n            week: {\n                dow: 1,\n                doy: 4\n            }\n        },\n        \"en-US\": {\n            months: [\n                \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n                \"August\", \"September\", \"October\", \"November\", \"December\"\n            ],\n            monthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n            weekdays: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n            weekdaysShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n            weekdaysMin: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n            week: {\n                dow: 1,\n                doy: 4\n            }\n        }\n    };\n\n    if (date_locales.hasOwnProperty(lang)) {\n        return date_locales[lang];\n    } else if (date_locales.hasOwnProperty(config.fallback_language)) {\n        console.error(\"Missing date locales for lang '\" + lang + \"', returning fallback language '\" + config.fallback_language + \"'.\");\n        return date_locales[config.fallback_language];\n    }\n    console.error(\"Missing date locales for lang '\" + lang + \"' and fallback language '\" + config.fallback_language + \"'. Returning null.\");\n    return null;\n}\n\nfunction formatSecondsToMS(value, alwaysInclude = \"none\", padding = false, colon = false) {\n    //Function to convert a value (seconds) to a [m]m[s]s format: 1m2s.\n    //alwaysInclude can be:\n    // \"none\" - if not enough for a minute only returns seconds, if an exact minute the seconds will not be included.\n    // \"minutes\" - if value not above 60 \"0m\" will be prepended to the seconds.\n    // \"seconds\" - if value is exact minute \"0s\" will be appended after the minute.\n    // \"both\" - Will always prepend and append \"0m\" and \"0s\" respectively as needed.\n    //padding <bool> toggles if values should be padded so 4 becomes 04. Both minutes and seconds will be padded.\n    //colon <bool> changes the format to be mm:ss instead of \"mmMssS\". Will always include both minutes and seconds, always padding.\n\n    const minutes = (value > 0) ? Math.floor(value / 60) : Math.ceil(value / 60);\n    const seconds = value % 60;\n\n    let m_str = \"\";\n    let s_str = \"\";\n\n    if (padding || colon) {\n        m_str = this.format(minutes, { padding: 2 });\n        s_str = this.format(seconds, { padding: 2 });\n    } else {\n        m_str = minutes + \"\"; //Ensure string.\n        s_str = seconds + \"\"; //Ensure string.\n    }\n\n    if (colon) {\n        return m_str + \":\" + s_str;\n    }\n\n    if (alwaysInclude === \"none\") {\n        if (minutes !== 0 && seconds !== 0) {\n            return m_str + \"m\" + s_str + \"s\";\n        } else if (minutes === 0) {\n            return s_str + \"s\";\n        }\n        return m_str + \"m\";\n    } else if (alwaysInclude === \"minutes\") {\n        if (seconds !== 0) {\n            return m_str + \"m\" + s_str + \"s\";\n        }\n        return m_str + \"m\";\n    } else if (alwaysInclude === \"seconds\") {\n        if (minutes !== 0) {\n            return m_str + \"m\" + s_str + \"s\";\n        }\n        return s_str + \"s\";\n    }\n    return m_str + \"m\" + s_str + \"s\";\n}\n\n\n\n\n\n\n////////////////\n//Numeric\n\nfunction roundTo(value, round_exp = 0) {\n    if (round_exp === 0) { return Math.round(value); }\n    value = value.toString().split('e');\n    value = Math.round(+(value[0] + 'e' + (value[1] ? (+value[1] - round_exp) : -round_exp)));\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + round_exp) : round_exp));\n}\n\nfunction roundUpTo(value, ceil_exp = 0) {\n    if (ceil_exp === 0) { return Math.ceil(value); }\n    value = value.toString().split('e');\n    value = Math.ceil(+(value[0] + 'e' + (value[1] ? (+value[1] - ceil_exp) : -ceil_exp)));\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + ceil_exp) : ceil_exp));\n}\n\nfunction roundDownTo(value, floor_exp = 0) {\n    if (floor_exp === 0) { return Math.floor(value); }\n    value = value.toString().split('e');\n    value = Math.floor(+(value[0] + 'e' + (value[1] ? (+value[1] - floor_exp) : -floor_exp)));\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + floor_exp) : floor_exp));\n}\n\nfunction format(value, options) {\n    let str;\n    const round = (typeof options.round === \"number\") || false;\n    const round_exp = options.round;\n    const ceil = (typeof options.ceil === \"number\") || false;\n    const ceil_exp = options.ceil;\n    const floor = (typeof options.floor === \"number\") || false;\n    const floor_exp = options.floor;\n    const fixed = (typeof options.fixed === \"number\") || false;\n    const separate_padding = (typeof options.integer_padding === \"number\" || typeof options.decimal_padding === \"number\") || false;\n    const i_pad_length = options.integer_padding;\n    const d_pad_length = options.decimal_padding;\n    const padding = (typeof options.padding === \"number\") || false;\n    const pad_length = options.padding;\n    const trunc = (options.trunc === true) || false;\n    const grouping = (options.grouping === true) || false;\n\n    const is_negative = (value < 0);\n\n    if (typeof value !== \"number\") {\n        console.warn(\"Tried to format a value but input was typeof: \", typeof value);\n        return value;\n    }\n\n    if (round && !ceil && !floor) {\n        value = this.roundTo(value, round_exp);\n    }\n    if (ceil && !floor) {\n        value = this.roundUpTo(value, ceil_exp);\n    }\n    if (floor) {\n        value = this.roundDownTo(value, floor_exp);\n    }\n\n    if (trunc && !round && !fixed) {\n        str = Math.trunc(value);\n    } else {\n        str = value.toString();\n    }\n\n    if (grouping) {\n        if (is_negative) { //Remove minus sign if negative.\n            str = str.substr(1);\n        }\n        let separated = str.split('.'); //We only want to group the value before the decimal point.\n        let arr = separated[0].split('');\n        str = \"\";\n        while (arr.length > 3) {\n            str = \" \" + arr[arr.length - 3] + arr[arr.length - 2] + arr[arr.length - 1] + str;\n            arr = arr.slice(0, arr.length - 3);\n        }\n        arr = arr.join(\"\");\n        str = (arr.length > 0) ? arr + str : str;\n        str += (separated.length > 1) ? \".\" + separated[1] : \"\";\n        if (is_negative) { //Add minus sign if negative.\n            str = \"-\" + str;\n        }\n    }\n\n    if (separate_padding) {\n        str = str.split(\".\");\n        if (str[0].length < i_pad_length) {\n            str[0] = (\"000000000000000000000\" + str[0]).slice(-i_pad_length);\n        }\n\n        if (str.length > 1 && str[1].length < d_pad_length) {\n            str[1] = (str[1] + \"000000000000000000000\").slice(0, d_pad_length);\n            str.join(\".\");\n        } else if (str.length > 1) {\n            str = str[0] + \".\" + (str[1] + \"00000000000000000\").slice(0, d_pad_length);\n        } else {\n            str = str[0] + \".\" + \"00000000000000000\".slice(0, d_pad_length);\n        }\n    }\n    if (padding) {\n        if (str.length < pad_length) {\n            str = (str + \"000000000000000000000\").slice(0, pad_length);\n        }\n    }\n\n    return str;\n}\n\n\n\n\n\n\nfunction updateTranslations(dictionary_arr, warn = true, overwrite = true) {\n    translations = {};\n    dictionary_arr.forEach((dict, dict_index) => {\n        let prefix = dict.hasOwnProperty('prefix') ? dict.prefix : \"\";\n        let langs = Object.keys(dict);\n        langs.forEach((lang) => {\n            if (translations.hasOwnProperty(lang) === false) {\n                let new_lang_translations = {};\n                Object.keys(dict[lang]).forEach((key) => {\n                    new_lang_translations[prefix + key] = dict[lang][key];\n                });\n                translations[lang] = new_lang_translations;\n            } else {\n                if (warn || !overwrite) {\n                    let updated_lang_translations = Object.assign({}, translations[lang]);\n                    Object.keys(dict[lang]).forEach((translation_key) => { \n                        if (updated_lang_translations.hasOwnProperty(prefix + translation_key)) {\n                            if (warn) {\n                                console.warn(\"OH: Dictionary \" + dict_index + \" is conflicting with existing key '\" + (prefix + translation_key) + \"'.\");\n                            }\n                            if (overwrite) {\n                                updated_lang_translations[prefix + translation_key] = dict[lang][translation_key];\n                            }\n                        }\n                    });\n                    translations[lang] = updated_lang_translations;\n                } else {\n                    let new_lang_translations = {};\n                    Object.keys(dict[lang]).forEach((key) => {\n                        new_lang_translations[prefix + key] = dict[lang][key];\n                    });\n                    translations[lang] = Object.assign({}, translations[lang], new_lang_translations);\n                }\n            }\n        });\n    });\n}\n\nfunction addDictionary(dictionary) {\n    config.dictionaries.push(dictionary);\n    updateTranslations(config.dictionaries);\n}\n\nlet funcs = {\n    addDictionary: addDictionary,\n    dateToMoment: dateToMoment,\n    format: format,\n    formatDateAsString: formatDateAsString,\n    formatDateAsTimeString: formatDateAsTimeString,\n    formatSecondsToMS: formatSecondsToMS,\n    getCurrentConfig: getCurrentConfig,\n    getDateLocale: getDateLocale,\n    getFallbackLang: getFallbackLang,\n    getLang: getLang,\n    roundDownTo: roundDownTo,\n    roundTo: roundTo,\n    roundUpTo: roundUpTo,\n    setConfig: setConfig,\n    translate: translate,\n};\n\nlet exported_funcs = Object.assign({}, funcs);\n\nfunction setConfig(config_opts) {\n    Object.keys(config_opts).forEach((key) => {\n        if (key === \"dictionaries\") {\n            console.warn(\"OH: setConfig has overwritten all previous dictionaries. To add dictionaries use 'OH.addDictionary()'\");\n            return;\n        }\n        if (config[key] !== default_config[key]) {\n            console.warn(\"OH: setConfig has overwritten previous setting '\" + key + \"': \" + config[key] + \" => \" + config_opts);\n        }\n    });\n    config = Object.assign({}, config, config_opts);\n\n    if (config.date_locale) {\n        moment.locale(config.date_locale);\n    } else {\n        moment.locale(config.lang);\n    }\n    if (!config.lang) {\n        config.warn(\"OH: No lang specified with setConfig, defaulting to fallback language: \" + config.fallback_language + \".\");\n        config.lang = config.fallback_language;\n    }\n    if (Array.isArray(config.dictionaries) === false) {\n        config.error(\"OH: 'dictionaries' prop required to be an array.\");\n        config.dictionaries = [];\n        translations = {};\n    }\n\n    updateTranslations(config.dictionaries);\n    exported_funcs = Object.assign(exported_funcs, config.extend_with, funcs);\n}\n\nfunction getCurrentConfig() {\n    return Object.assign({}, config);\n}\n\nfunction getLang() {\n    return config.lang;\n}\nfunction getFallbackLang() {\n    return config.fallback_language;\n}\n\n\n\nexport default exported_funcs;"]}